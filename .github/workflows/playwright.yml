name: Playwright Tests

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      test_command:
        description: "Custom test command"
        required: true
        default: '--grep-invert "@devRun"'
        type: string
      parallelism:
        description: "Number of machines to split tests"
        required: false
        default: 2
        type: number
      github-token:
        description: "GitHub token for publishing to GitHub Pages"
        required: true
      results-pattern:
        description: "Pattern to match when downloading Allure results artifacts"
        required: false
        default: "allure-results-*"
      results-directory:
        description: "Directory where combined Allure results will be stored"
        required: false
        default: "combined-allure-results"
      report-directory:
        description: "Directory where the Allure report will be generated"
        required: false
        default: "allure-report"
      history-directory:
        description: "Directory for Allure history"
        required: false
        default: "allure-history"
      gh-pages:
        description: "Directory for GitHub Pages"
        required: false
        default: "gh-pages"
      gh-pages-branch:
        description: "Branch for GitHub Pages"
        required: false
        default: "gh-pages"
      retention-days:
        description: "Number of days to retain the Allure report artifact"
        required: false
        default: "14"
      publish-to-pages:
        description: "Whether to publish the report to GitHub Pages"
        required: false
        default: "true"
      fail-on-empty-results:
        description: "Whether to fail if no Allure results are found"
        required: false
        default: "false"
      add-env:
        description: "Whether to collect and add to report the env variables"
        required: false
        default: "false"

permissions:
  contents: write
  pages: write

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          count=${{ github.event.inputs.parallelism || 2 }}
          matrix=$(seq -s ',' 1 $count)
          echo "matrix=$(jq -cn --argjson groups "[$matrix]" '{group: $groups}')" >> $GITHUB_OUTPUT

  nightly-test:
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install FFmpeg for Playwright test videos
        run: sudo apt-get install -y ffmpeg

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browser
        run: npx playwright install

      - name: Run Playwright tests
        run: |
          CI=true npm test --shard=${{ matrix.group }}/${{ github.event.inputs.parallelism || 2 }}
          # Convert test videos to MP4 for better compatibility
          find test-results -name "*.webm" -exec bash -c 'ffmpeg -i "$0" -c:v libx264 -preset fast -crf 22 -c:a aac "${0%.webm}.mp4"' {} \;

      - name: Upload test results and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.group }}
          path: |
            allure-results
            test-results
          retention-days: 7

  merge-reports:
    needs: nightly-test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download all test artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-test-results

      - name: Merge Allure results
        run: |
          # Combine all allure-results folders
          mkdir -p combined-allure-results
          find all-test-results -type f -name "*.json" -exec cp {} combined-allure-results \;

          # Copy test videos to Allure attachments directory
          mkdir -p combined-allure-results/attachments
          find all-test-results -type f \( -name "*.webm" -o -name "*.mp4" \) -exec cp {} combined-allure-results/attachments \;

      - name: Load test report history
        if: inputs.publish-to-pages == 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.gh-pages-branch }}
          path: ${{ inputs.gh-pages }}
        continue-on-error: true

      - name: Link Git Information And Browser Version To Allure Report
        shell: bash
        working-directory: ${{ inputs.results-directory }}
        if: inputs.add-env == 'true'
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          {
            echo BUILD_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            echo GIT_BRANCH=${{ github.head_ref || github.ref_name }}
            echo GIT_COMMIT_ID=${{ github.sha }}
            echo GIT_COMMIT_MESSAGE="$(git show -s --format=%s HEAD)"
            echo GIT_COMMIT_AUTHOR_NAME="$(git show -s --format='%ae' HEAD)"
            echo GIT_COMMIT_TIME="$(git show -s --format=%ci HEAD)"
            echo NODE_JS: "$(node -v)",
            echo OS: "$(grep -E '^(VERSION|NAME)=' /etc/os-release | tr '\n' ' ' | sed 's/NAME=//; s/VERSION=//; s/ / /')"
          } >> environment.properties

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@v1.11
        with:
          gh_pages: ${{ inputs.gh-pages }}
          allure_results: ${{ inputs.results-directory }}
          allure_history: ${{ inputs.history-directory }}
          allure_report: ${{ inputs.report-directory }}

      - name: Configure Allure for video attachments
        run: |
          cat > allure.properties <<EOF
          allure.attachments.encoding=UTF-8
          allure.attachments.mp4=video/mp4
          allure.attachments.webm=video/webm
          allure.attachments.retry=true
          allure.link.issue.pattern=https://your-issue-tracker/{}
          allure.link.tms.pattern=https://your-tms/{}
          EOF

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ${{ inputs.report-directory }}
          if-no-files-found: warn
          retention-days: ${{ inputs.retention-days }}

      - name: Queue deployment
        uses: softprops/turnstyle@v2
        with:
          poll-interval-seconds: 20
          timeout-seconds: 1200
        env:
          github_token: ${{ inputs.github-token }}

      - name: Deploy report to GitHub Pages
        if: inputs.publish-to-pages == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ inputs.github-token }}
          publish_branch: ${{ inputs.gh-pages-branch }}
          publish_dir: ${{ inputs.history-directory }}
