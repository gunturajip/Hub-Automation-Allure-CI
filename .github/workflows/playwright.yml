name: Playwright Tests

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      test_command:
        description: "Custom test command"
        required: true
        default: '--grep-invert "@devRun"'
        type: string
      parallelism:
        description: "Number of machines to split tests"
        required: false
        default: 2
        type: number

permissions:
  contents: write
  pages: write

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          count=${{ github.event.inputs.parallelism || 2 }}
          matrix=$(seq -s ',' 1 $count)
          echo "matrix=$(jq -cn --argjson groups "[$matrix]" '{group: $groups}')" >> $GITHUB_OUTPUT

  nightly-test:
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browser
        run: npx playwright install

      - name: Run Playwright tests
        run: |
          CI=true npm test --shard=${{ matrix.group }}/${{ github.event.inputs.parallelism || 2 }}

      - name: Upload test results and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.group }}
          path: |
            allure-results
            test-results
          retention-days: 7

  merge-reports:
    needs: nightly-test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download all test artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-test-results
          pattern: allure-results-*

      - name: Merge Allure results
        run: |
          # Combine all allure-results folders
          mkdir -p combined-allure-results

          find all-test-results/*/allure-results -type f \( -name "*.json" -o -name "*.webm" -o -name "*.md" -o -name "*.zip" \) | while read -r file; do
            # Get the base filename with extension
            filename=$(basename "$file")

            # Copy to combined-allure-results
            cp "$file" "combined-allure-results/$filename"
          done

      - name: Load test report history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true

      - name: Link Git Information And Browser Version To Allure Report
        shell: bash
        working-directory: combined-allure-results
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          {
            echo BUILD_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            echo GIT_BRANCH=${{ github.head_ref || github.ref_name }}
            echo GIT_COMMIT_ID=${{ github.sha }}
            echo GIT_COMMIT_MESSAGE="$(git show -s --format=%s HEAD)"
            echo GIT_COMMIT_AUTHOR_NAME="$(git show -s --format='%ae' HEAD)"
            echo GIT_COMMIT_TIME="$(git show -s --format=%ci HEAD)"
            echo NODE_JS: "$(node -v)",
            echo OS: "$(grep -E '^(VERSION|NAME)=' /etc/os-release | tr '\n' ' ' | sed 's/NAME=//; s/VERSION=//; s/ / /')"
          } >> environment.properties

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@v1.11
        with:
          gh_pages: gh-pages
          allure_results: combined-allure-results
          allure_history: allure-history
          allure_report: allure-report

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          if-no-files-found: warn
          retention-days: 7

      - name: Queue deployment
        uses: softprops/turnstyle@v2
        with:
          poll-interval-seconds: 20
          timeout-seconds: 1200
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          keep_files: true
